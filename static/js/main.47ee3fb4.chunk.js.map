{"version":3,"sources":["components/TodoItems.js","components/ToDo.js","components/layouts/Header.js","components/AddTodo.js","App.js","index.js"],"names":["TodoItems","getStyle","textDecoration","props","todo","completed","cardStyle","border","background","this","id","title","label","className","style","onClick","markComplete","bind","delTodo","editTodo","Component","ToDo","todos","map","key","headerStyle","fontFamily","color","fontSize","textAlign","padding","Header","AddTodo","state","getAllLabels","labels","count","i","distinctLabels","Set","console","log","length","onSubmit","e","preventDefault","addTodo","setState","renderElement","value","onChange","target","name","display","inputStyle","type","placeholder","optionStyle","list","flex","margin","borderRadius","App","uuid","v4","filter","newTodo","newTitle","prompt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47ee3fb4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class TodoItems extends Component {\r\n    //dynamic style for completed tasks\r\n    getStyle = ()=> {\r\n        return {\r\n            textDecoration: this.props.todo.completed ? 'line-through': 'none'\r\n        }\r\n    }\r\n    cardStyle = ()=> {\r\n        return {\r\n            border: this.props.todo.completed ? '4px solid green' : '4px solid transparent',\r\n            background: this.props.todo.completed ? 'rgba(138, 243, 142, 0.28)' : '#fff'\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {id, title, label} = this.props.todo; //deconstructing \r\n        return (\r\n                <div className=\"card\" style = { this.cardStyle()}> \r\n                    <p className=\"title\" style={ this.getStyle()}>{ title } </p>\r\n                    <div className=\"tag\"> { label }</div>\r\n                    <div className=\"u-btns\">\r\n                        <button className=\"btns complete\" onClick= {this.props.markComplete.bind( this, id)}> Done</button> \r\n                        <button className=\"btns delete\" onClick={this.props.delTodo.bind(this, id)}>Delete</button> \r\n                        <button className=\"btns edit\" onClick= {this.props.editTodo.bind(this, id) }>Edit</button>\r\n                    </div>   \r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nTodoItems.propTypes = {\r\n    todo: PropTypes.object.isRequired\r\n}\r\n\r\nexport default TodoItems;","import React, {Component} from 'react';\r\nimport TodoItems from './TodoItems';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ToDo extends Component {\r\n    render() {\r\n        return this.props.todos.map( (todo)=> (\r\n            <TodoItems  \r\n                key={todo.id} \r\n                todo={todo} \r\n                markComplete = { this.props.markComplete}\r\n                delTodo = {this.props.delTodo} \r\n                editTodo = {this.props.editTodo}    \r\n            /> \r\n        ));\r\n    }\r\n}\r\n\r\nToDo.propTypes = {\r\n    todos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ToDo;","import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>ToDo App In React</h1>\r\n        </header>\r\n    )\r\n}\r\nconst headerStyle = {\r\n    fontFamily: 'sans-serif',\r\n    color: '#595959',\r\n    fontSize: '24px',\r\n    textAlign: 'center',\r\n    padding: '30px',\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nexport class AddTodo extends Component {\r\n    \r\n    state= {\r\n        //add fields here\r\n        title: '',\r\n        label: ''\r\n    }\r\n\r\n    //fetches all labels from the list\r\n    getAllLabels = ()=> {\r\n        let labels = [];\r\n        let count = 0;\r\n        this.props.todos.map(i=> {\r\n            labels[count] = i.label;\r\n            count++;\r\n        });\r\n        //gathers only distinct label\r\n        let distinctLabels = [...new Set(labels)];\r\n        console.log(\"Fetched \"+distinctLabels.length+ \" labels\")\r\n        return distinctLabels;\r\n    }\r\n\r\n    onSubmit = (e)=> {\r\n        e.preventDefault();\r\n        //if label is not provided\r\n        if(this.state.label==='') {\r\n            this.state.label = 'general';\r\n        }\r\n        this.props.addTodo(this.state.title, this.state.label);\r\n        this.setState( {title: ''}) //clear after submit\r\n        this.setState( {label: ''})\r\n    }\r\n\r\n    //renders the option label\r\n    renderElement = (labels)=> {\r\n        let count = 1;\r\n        return labels.map(function (label) {\r\n            return (\r\n                <option key={ count++ } value={label} ></option>\r\n            )\r\n        })\r\n    }\r\n\r\n    onChange = (e)=> this.setState( { [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        let labels = this.getAllLabels();\r\n        return (\r\n            <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\r\n                <input className=\"title-input\" style={ inputStyle }\r\n                    type=\"text\" name=\"title\" placeholder=\"add a todo..\"\r\n                    value = {this.state.title}\r\n                    onChange = {this.onChange}\r\n                />\r\n                <input className=\"label-input\" style= { optionStyle } \r\n                    list=\"labels\" name=\"label\" placeholder=\"label/bucket\" \r\n                    value = {this.state.label} \r\n                    onChange = {this.onChange} \r\n                />\r\n               \r\n                <datalist id=\"labels\">\r\n                    { this.renderElement(labels) }    \r\n                </datalist>\r\n\r\n                <input  style={{ flex: '1'}}\r\n                    type=\"submit\" value=\"Submit\" className=\"btn\"\r\n                />\r\n            </form>\r\n        );\r\n        \r\n    }\r\n\r\n    \r\n}\r\n\r\n//jsx css\r\nconst optionStyle = {\r\n    flex: '3',\r\n    fontSize: '24px',\r\n    fontFamily: 'cursive',\r\n    margin: '10px',\r\n    padding: '5px 20px',\r\n    borderRadius: '6px',\r\n    border: '1.2px solid gray'\r\n}\r\n\r\nconst inputStyle = {\r\n    flex: '8',\r\n    fontSize: '24px',\r\n    fontFamily: 'cursive',\r\n    padding: '5px 20px',\r\n    margin: '10px 30px',\r\n    borderRadius: '6px',\r\n    border: '1.2px solid gray'\r\n}\r\n\r\nexport default AddTodo;","import React, {Component} from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport ToDo from './components/ToDo';\nimport Header from './components/layouts/Header';\nimport AddTodo from './components/AddTodo';\nimport uuid from 'uuid';\nimport './App.css';\n\n\nclass App extends Component {\n  //current state of the application, with sample todos\n  state = {\n    todos: [\n      {\n        id: uuid.v4(),\n        title: 'finish the Deep Learning assignment',\n        completed: false,\n        label: 'general'\n      },\n      {\n        id: uuid.v4(),\n        title: 'Meeting with teammates',\n        completed: false,\n        label: 'urgent'\n      },\n      {\n        id: uuid.v4(),\n        title: 'sleep before 12PM',\n        completed: false,\n        label: 'general'\n      }\n    ]\n  }\n\n  //handle the complete state of the todo\n  markComplete = (id)=> {\n    console.log(\"toggling state of id:\"+id);\n    this.setState( { todos: this.state.todos.map( todo=> {\n      if(todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    })  })\n  }\n\n  //deletes a todo\n  delTodo = (id)=> {\n    console.log(\"deleting task with id:\"+id);\n    this.setState( { todos: [...this.state.todos.filter(todo => \n      todo.id !== id) \n    ] });\n  }\n\n  //add a new todo to list\n  addTodo = (title, label)=> {\n    console.log(\"adding the title: \"+title+\" with label: \"+label);\n    const newTodo = {\n      id: uuid.v4(),\n      title, //title: title\n      completed: false,\n      label: label\n    }\n    this.setState( {todos: [...this.state.todos, newTodo] });\n  }\n\n  //edit a todo\n  editTodo = (id)=> {\n    let newTitle = prompt(\"enter new data\");\n    if(newTitle!=null) {\n      this.setState( {todos: this.state.todos.map(todo=> {\n        if(todo.id === id) {\n          todo.title = newTitle;\n        }\n        return todo;\n      }) })\n    } \n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <AddTodo \n              addTodo={this.addTodo}  \n              todos = {this.state.todos}\n            />\n            <div className=\"card-container\">\n              <ToDo \n                todos= {this.state.todos} \n                markComplete = { this.markComplete}\n                delTodo={this.delTodo} \n                editTodo={this.editTodo}\n              />\n            </div>\n          </div>    \n        </div>\n      </Router>\n    );\n\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}